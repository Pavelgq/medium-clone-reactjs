import React, {useContext, useEffect} from 'react'
import useFetch from 'hooks/useFetch';
import useLocalStorage from 'hooks/useLocalStorage';

import {CurrentUserContext} from 'contexts/currentUser';


const CurrentUserChecker = ({children}) => {
    const [{response}, doFetch] = useFetch('/user')
    const [currentUserState, setCurrentUserState] = useContext(CurrentUserContext)
    const [token] = useLocalStorage('token')
    useEffect(() => {
        if (!token) {
            setCurrentUserState(state => ({
                ...state,
                isLoginedIn: false
            }))
            return
        }
        doFetch()
        setCurrentUserState(state => ({
            ...state,
            isLoading: true
        }))
    }, [setCurrentUserState, doFetch, token])

    useEffect(() => {
        if (!response) {
            return
        }

        setCurrentUserState(state => ({
            ...state,
            isLoading: false,
            isLoginedIn: true,
            currentUser: response.user,
        }))
    }, [response])
    return children
}

export default CurrentUserChecker