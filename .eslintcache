[{"/Users/pavelgordeev/Documents/projects/react-hooks-course/medium-clone/src/index.js":"1","/Users/pavelgordeev/Documents/projects/react-hooks-course/medium-clone/src/components/CurrentUserChecker/CurrentUserChecker.js":"2","/Users/pavelgordeev/Documents/projects/react-hooks-course/medium-clone/src/routes.js":"3","/Users/pavelgordeev/Documents/projects/react-hooks-course/medium-clone/src/contexts/currentUser.js":"4","/Users/pavelgordeev/Documents/projects/react-hooks-course/medium-clone/src/components/TopBar/TopBar.js":"5","/Users/pavelgordeev/Documents/projects/react-hooks-course/medium-clone/src/pages/globalFeed/globalFeed.js":"6","/Users/pavelgordeev/Documents/projects/react-hooks-course/medium-clone/src/pages/yourFeed/yourFeed.js":"7","/Users/pavelgordeev/Documents/projects/react-hooks-course/medium-clone/src/pages/article/article.js":"8","/Users/pavelgordeev/Documents/projects/react-hooks-course/medium-clone/src/pages/authentication/authentication.js":"9","/Users/pavelgordeev/Documents/projects/react-hooks-course/medium-clone/src/pages/editArticle/editArticle.js":"10","/Users/pavelgordeev/Documents/projects/react-hooks-course/medium-clone/src/pages/createArticle/createArticle.js":"11","/Users/pavelgordeev/Documents/projects/react-hooks-course/medium-clone/src/pages/tagFeed/tagFeed.js":"12","/Users/pavelgordeev/Documents/projects/react-hooks-course/medium-clone/src/pages/userProfile/userProfile.js":"13","/Users/pavelgordeev/Documents/projects/react-hooks-course/medium-clone/src/pages/settings/settings.js":"14","/Users/pavelgordeev/Documents/projects/react-hooks-course/medium-clone/src/hooks/useFetch.js":"15","/Users/pavelgordeev/Documents/projects/react-hooks-course/medium-clone/src/hooks/useLocalStorage.js":"16","/Users/pavelgordeev/Documents/projects/react-hooks-course/medium-clone/src/components/ArticleForm/ArticleForm.js":"17","/Users/pavelgordeev/Documents/projects/react-hooks-course/medium-clone/src/components/BackendErrorMessages/BackendErrorMessages.js":"18","/Users/pavelgordeev/Documents/projects/react-hooks-course/medium-clone/src/components/ErrorMessage/ErrorMessage.js":"19","/Users/pavelgordeev/Documents/projects/react-hooks-course/medium-clone/src/components/Loading/Loading.js":"20","/Users/pavelgordeev/Documents/projects/react-hooks-course/medium-clone/src/components/TagList/TagList.js":"21","/Users/pavelgordeev/Documents/projects/react-hooks-course/medium-clone/src/components/FeedToggler/FeedToggler.js":"22","/Users/pavelgordeev/Documents/projects/react-hooks-course/medium-clone/src/components/Feed/Feed.js":"23","/Users/pavelgordeev/Documents/projects/react-hooks-course/medium-clone/src/components/Pagination/Pagination.js":"24","/Users/pavelgordeev/Documents/projects/react-hooks-course/medium-clone/src/components/PopularTags/PopularTags.js":"25","/Users/pavelgordeev/Documents/projects/react-hooks-course/medium-clone/src/components/AddToFavorite/AddToFavorite.js":"26","/Users/pavelgordeev/Documents/projects/react-hooks-course/medium-clone/src/pages/userProfile/components/UserArticles/UserArticles.js":"27","/Users/pavelgordeev/Documents/projects/react-hooks-course/medium-clone/src/utils.js":"28"},{"size":672,"mtime":1615314586313,"results":"29","hashOfConfig":"30"},{"size":837,"mtime":1614536452954,"results":"31","hashOfConfig":"30"},{"size":1272,"mtime":1614525044414,"results":"32","hashOfConfig":"30"},{"size":968,"mtime":1614527925988,"results":"33","hashOfConfig":"30"},{"size":2409,"mtime":1614536890540,"results":"34","hashOfConfig":"30"},{"size":1903,"mtime":1614527694624,"results":"35","hashOfConfig":"30"},{"size":1877,"mtime":1614527480796,"results":"36","hashOfConfig":"30"},{"size":3325,"mtime":1614537017742,"results":"37","hashOfConfig":"30"},{"size":3662,"mtime":1615315691804,"results":"38","hashOfConfig":"30"},{"size":2045,"mtime":1614537072287,"results":"39","hashOfConfig":"30"},{"size":1370,"mtime":1614537065000,"results":"40","hashOfConfig":"30"},{"size":1957,"mtime":1614527753670,"results":"41","hashOfConfig":"30"},{"size":1774,"mtime":1614527753670,"results":"42","hashOfConfig":"30"},{"size":3755,"mtime":1614537086951,"results":"43","hashOfConfig":"30"},{"size":1424,"mtime":1614614298514,"results":"44","hashOfConfig":"30"},{"size":291,"mtime":1614527926050,"results":"45","hashOfConfig":"30"},{"size":2494,"mtime":1614527753669,"results":"46","hashOfConfig":"30"},{"size":790,"mtime":1615318416561,"results":"47","hashOfConfig":"30"},{"size":114,"mtime":1614527753670,"results":"48","hashOfConfig":"30"},{"size":94,"mtime":1614527753670,"results":"49","hashOfConfig":"30"},{"size":212,"mtime":1614536880578,"results":"50","hashOfConfig":"30"},{"size":1021,"mtime":1614527753670,"results":"51","hashOfConfig":"30"},{"size":1655,"mtime":1614536872826,"results":"52","hashOfConfig":"30"},{"size":1220,"mtime":1614536740502,"results":"53","hashOfConfig":"30"},{"size":1001,"mtime":1614536797711,"results":"54","hashOfConfig":"30"},{"size":1162,"mtime":1614536293074,"results":"55","hashOfConfig":"30"},{"size":1396,"mtime":1614527753670,"results":"56","hashOfConfig":"30"},{"size":771,"mtime":1614527256109,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"12pe282",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"60"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"60"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"60"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"60"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"60"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"60"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"60"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"/Users/pavelgordeev/Documents/projects/react-hooks-course/medium-clone/src/index.js",[],["130","131","132","133","134"],"/Users/pavelgordeev/Documents/projects/react-hooks-course/medium-clone/src/components/CurrentUserChecker/CurrentUserChecker.js",[],"/Users/pavelgordeev/Documents/projects/react-hooks-course/medium-clone/src/routes.js",[],"/Users/pavelgordeev/Documents/projects/react-hooks-course/medium-clone/src/contexts/currentUser.js",["135"],"import React, { createContext, useReducer } from 'react'\n\nconst initialState = {\n  isLoading: false,\n  isLoginedIn: null,\n  currentUser: null,\n}\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'LOADING':\n      return {\n        ...state,\n        isLoading: true,\n      }\n    case 'SET_AUTHORIZED':\n      return {\n        ...state,\n        isLoggedIn: true,\n        isLoading: false,\n        currentUser: action.payload,\n      }\n    case 'SET_UNAUTHORIZED':\n      return {\n        ...state,\n        isLoggedIn: false,\n      }\n    case 'LOGOUT':\n      return {\n        ...initialState,\n        isLoggedIn: false,\n      }\n    default:\n      return state\n  }\n}\n\nexport const CurrentUserContext = createContext([{}, () => {}])\n\nexport const CurrentUserProvider = ({ children }) => {\n  const value = useReducer(reducer, initialState)\n  return (\n    <CurrentUserContext.Provider value={value}>\n      {children}\n    </CurrentUserContext.Provider>\n  )\n}\n","/Users/pavelgordeev/Documents/projects/react-hooks-course/medium-clone/src/components/TopBar/TopBar.js",["136"],"import React, {useContext, Fragment} from 'react'\n\nimport { NavLink, Link } from 'react-router-dom'\n\nimport {CurrentUserContext} from '@contexts/currentUser';\nimport './TopBar.css';\n\nconst TopBar = () => {\n    const [currentUserState] = useContext(CurrentUserContext)\n    console.log(currentUserState)\n    return (\n      <nav className=\"nav\">\n        <div className=\"container\">\n          <Link className='nav__logo' to='/'>Medium</Link>\n          <ul className=\"nav__list list\">\n            <li className=\"list__item item\">\n              <NavLink to='/' className='item__link' exact>Home</NavLink>\n            </li>\n\n            {currentUserState.isLoggedIn === false && (\n            <>\n              <li className=\"list__item item\">\n                <NavLink to='/login' className='item__link'>Sign in</NavLink>\n              </li>\n              <li className=\"list__item item\">\n                <NavLink to='/register' className='item__link'>Sign up</NavLink>\n              </li>\n            </>\n                    )}\n\n            {currentUserState.isLoggedIn && (\n            <>\n              <li className=\"list__item item\">\n                <NavLink to='/article/new' className='item__link'>\n                  <ion-icon name=\"create-outline\" />\n                                    &nbsp;New post\n                </NavLink>\n              </li>\n              <li className=\"list__item item\">\n                <NavLink to='/settings' className='item__link'>\n                  <ion-icon name=\"settings-outline\" />\n                                    &nbsp;Settings\n                </NavLink>\n              </li>\n              <li className=\"list__item item\">\n                <NavLink \n                  to={`/profiles/${currentUserState.currentUser.username}`} \n                  className=\"item__link\"\n                >\n                  <div className='item__avatar avatar'>\n                    <img \n                      className=\"avatar__img\" \n                      src={currentUserState.currentUser.image \n                        || 'https://static.productionready.io/images/smiley-cyrus.jpg'} \n                      alt='user avatar'\n                    />\n                  </div>\n                  {currentUserState.currentUser.username}\n                </NavLink>\n              </li>\n            </>\n                    )}\n          </ul>\n        </div>\n      </nav>\n    )\n}\n\nexport default TopBar;","/Users/pavelgordeev/Documents/projects/react-hooks-course/medium-clone/src/pages/globalFeed/globalFeed.js",["137","138","139","140"],"import React, {Fragment, useEffect} from 'react';\nimport {stringify} from 'query-string';\n\nimport useFetch from '@hooks/useFetch';\n\nimport FeedToggler from '@components/FeedToggler/FeedToggler';\nimport Feed from '@components/Feed/Feed';\nimport Pagination from '@components/Pagination/Pagination';\nimport PopularTags from '@components/PopularTags/PopularTags';\nimport Loading from '@components/Loading/Loading';\nimport ErrorMessage from '@components/ErrorMessage/ErrorMessage';\n\nimport {getPaginator, limit} from '~/utils';\nimport './globalFeed.css';\n\nconst GlobalFeed = ({location, match}) => {\n    const {offset, currentPage} = getPaginator(location.search)\n    const stringifiedParam = stringify({\n        limit,\n        offset\n    })\n    const apiUrl = `/articles?${stringifiedParam}`\n    const [{response, isLoading, error}, doFetch] = useFetch(apiUrl)\n    const {url} = match;\n    useEffect(() => {\n       doFetch()\n    }, [doFetch, currentPage])\n    return (\n      <main className='main'>\n        <div className='banner'>\n          <div className='container--col'>\n            <h1>Medium Clone</h1>\n            <p>A place to share knowledge</p>\n          </div>\n        </div>\n        <div className='content'>\n          <section className='content__feeds feeds'>\n            <FeedToggler />\n            {isLoading && <Loading />}\n            {error && <ErrorMessage />}\n            {!isLoading && response && (\n            <>\n              <Feed articles={response.articles} />\n              <Pagination \n                total={response.articlesCount} \n                limit={limit} \n                url={url} \n                currentPage={currentPage}\n              />\n            </>\n                    )}\n          </section>\n          <aside className='content__widgets widgets'>\n            <PopularTags />\n          </aside>\n        </div>\n      </main>\n    );\n}\n\nexport default GlobalFeed","/Users/pavelgordeev/Documents/projects/react-hooks-course/medium-clone/src/pages/yourFeed/yourFeed.js",["141","142","143","144"],"import React, {Fragment, useEffect} from 'react';\nimport {stringify} from 'query-string';\n\nimport useFetch from '@hooks/useFetch';\n\nimport FeedToggler from '@components/FeedToggler/FeedToggler';\nimport Feed from '@components/Feed/Feed';\nimport Pagination from '@components/Pagination/Pagination';\nimport PopularTags from '@components/PopularTags/PopularTags';\nimport Loading from '@components/Loading/Loading';\nimport ErrorMessage from '@components/ErrorMessage/ErrorMessage';\n\nimport {getPaginator, limit} from '~/utils';\n\nconst YourFeed = ({location, match}) => {\n    const {offset, currentPage} = getPaginator(location.search)\n    const stringifiedParam = stringify({\n        limit,\n        offset\n    })\n    const apiUrl = `/articles/feed?${stringifiedParam}`\n    const [{response, isLoading, error}, doFetch] = useFetch(apiUrl)\n    const {url} = match;\n    useEffect(() => {\n       doFetch()\n    }, [doFetch, currentPage])\n    return (\n      <main className='main'>\n        <div className='banner'>\n          <div className='container--col'>\n            <h1>Medium Clone</h1>\n            <p>A place to share knowledge</p>\n          </div>\n        </div>\n        <div className='content'>\n          <section className='content__feeds feeds'>\n            <FeedToggler />\n            {isLoading && <Loading />}\n            {error && <ErrorMessage />}\n            {!isLoading && response && (\n            <>\n              <Feed articles={response.articles} />\n              <Pagination \n                total={response.articlesCount} \n                limit={limit} \n                url={url} \n                currentPage={currentPage}\n              />\n            </>\n                    )}\n          </section>\n          <aside className='content__widgets widgets'>\n            <PopularTags />\n          </aside>\n        </div>\n      </main>\n    );\n}\n\nexport default YourFeed","/Users/pavelgordeev/Documents/projects/react-hooks-course/medium-clone/src/pages/article/article.js",["145","146","147"],"import React, {useContext, useEffect, useState} from 'react'\n\nimport useFetch from '@hooks/useFetch'\nimport { Link, Redirect } from 'react-router-dom'\n\nimport Loading from '@components/Loading/Loading';\nimport ErrorMessage from '@components/ErrorMessage/ErrorMessage';\nimport TagList from '@components/TagList/TagList';\nimport {CurrentUserContext} from '@contexts/currentUser'\n\nconst Articles = ({match}) => {\n    const {slug} = match.params\n    const apiUrl = `/articles/${slug}`\n    const [{\n            response: fetchArticleResponse, \n            isLoading: fetchArticleIsLoading, \n            error: fetchArticleError\n        }, doFetch] = useFetch(apiUrl)\n    const [{response: deleteArticleResponse}, doDeleteArticle] = useFetch(apiUrl)\n    const [currentUserState] = useContext(CurrentUserContext)\n    const [isSuccesfullDelete, setIsSuccesfullDelete] = useState(false)\n\n    const isAuthor = () => {\n        if (!fetchArticleResponse || !currentUserState.isLoggedIn) {\n            return false\n        }\n        return (\n            fetchArticleResponse.article.author.username === currentUserState.currentUser.username\n            )\n    }\n\n    const deleteArticle = () => {\n        doDeleteArticle({\n            method: 'delete'\n        })\n    }\n\n    useEffect(() => {\n        doFetch()\n    }, [doFetch])\n    \n    useEffect(() => {\n        if (!deleteArticleResponse) {\n            return\n        }\n        setIsSuccesfullDelete(true)\n    }, [deleteArticleResponse])\n\n    if (isSuccesfullDelete) {\n        return <Redirect to='/' />\n    }\n\n    return (\n      <div className='article'>\n        <div className='article__bunner'>\n          {fetchArticleIsLoading && <Loading />}\n          {fetchArticleError && <ErrorMessage />}\n          {!fetchArticleIsLoading && fetchArticleResponse && (\n            <div className='container'>\n              <h1>{fetchArticleResponse.article.title}</h1>\n              <div className='article__meta'>\n                <Link to={`/profiles/${fetchArticleResponse.article.author.username}`}>\n                  <img \n                    className='avatar__img' \n                    src={fetchArticleResponse.article.author.image} \n                    alt='avatar'\n                  />\n                </Link>\n                <span className='article__date'>{fetchArticleResponse.article.createdAt}</span>\n              </div>\n              {isAuthor() && (\n              <span>\n                <Link \n                  className='button' \n                  to={`/articles/${fetchArticleResponse.article.slug}/edit`}\n                >\n                  Edit\n                </Link>\n                <button type='submit' className='' onClick={deleteArticle}>Delete</button>\n              </span>\n                        )}\n            </div>\n                )}\n        </div>\n        <div className='container'>\n          {fetchArticleIsLoading && <Loading />}\n          {fetchArticleError && <ErrorMessage />}\n          {!fetchArticleIsLoading && fetchArticleResponse && (\n            <div className=''>\n              <div className=''>\n                <p>{fetchArticleResponse.article.body}</p>\n              </div>\n              <TagList tags={fetchArticleResponse.article.tagList} />\n            </div>\n                )}\n        </div>\n\n      </div>\n    )\n}\n\nexport default Articles;","/Users/pavelgordeev/Documents/projects/react-hooks-course/medium-clone/src/pages/authentication/authentication.js",["148","149"],"/Users/pavelgordeev/Documents/projects/react-hooks-course/medium-clone/src/pages/editArticle/editArticle.js",[],"/Users/pavelgordeev/Documents/projects/react-hooks-course/medium-clone/src/pages/createArticle/createArticle.js",[],"/Users/pavelgordeev/Documents/projects/react-hooks-course/medium-clone/src/pages/tagFeed/tagFeed.js",["150","151","152","153","154","155"],"import React, {Fragment, useEffect} from 'react';\nimport {stringify} from 'query-string';\n\nimport useFetch from '@hooks/useFetch';\n\nimport FeedToggler from '@components/FeedToggler/FeedToggler';\nimport Feed from '@components/Feed/Feed';\nimport Pagination from '@components/Pagination/Pagination';\nimport PopularTags from '@components/PopularTags/PopularTags';\nimport Loading from '@components/Loading/Loading';\nimport ErrorMessage from '@components/ErrorMessage/ErrorMessage';\n\nimport {getPaginator, limit} from '~/utils';\n\nconst TagFeed = ({location, match}) => {\n    const tagName = match.params.slug\n    const {offset, currentPage} = getPaginator(location.search)\n    const stringifiedParam = stringify({\n        limit,\n        offset,\n        tag: tagName\n    })\n    const apiUrl = `/articles?${stringifiedParam}`\n    const [{response, isLoading, error}, doFetch] = useFetch(apiUrl)\n    const {url} = match;\n    useEffect(() => {\n       doFetch()\n    }, [doFetch, currentPage, tagName])\n    return (\n      <main className='main'>\n        <div className='banner'>\n          <div className='container--col'>\n            <h1>Medium Clone</h1>\n            <p>A place to share knowledge</p>\n          </div>\n        </div>\n        <div className='content'>\n          <section className='content__feeds feeds'>\n            <FeedToggler tagName={tagName} />\n            {isLoading && <Loading />}\n            {error && <ErrorMessage />}\n            {!isLoading && response && (\n            <>\n              <Feed articles={response.articles} />\n              <Pagination \n                total={response.articlesCount} \n                limit={limit} \n                url={url} \n                currentPage={currentPage}\n              />\n            </>\n                    )}\n          </section>\n          <aside className='content__widgets widgets'>\n            <PopularTags />\n          </aside>\n        </div>\n      </main>\n    );\n}\n\nexport default TagFeed","/Users/pavelgordeev/Documents/projects/react-hooks-course/medium-clone/src/pages/userProfile/userProfile.js",["156","157","158","159","160","161","162","163"],"import React, { useEffect } from 'react'\nimport { NavLink } from 'react-router-dom';\n\nimport useFetch from '@hooks/useFetch';\n\nimport UserArticles from '@pages/userProfile/components/UserArticles/UserArticles';\n\nconst UserProfile = ({match, location}) => {\n    \n    const {slug} = match.params\n    const isFavorites = location.pathname.includes('favorites')\n    const apiUrl = `/profiles/${slug}`\n    const [{response}, doFetch] = useFetch(apiUrl)\n\n    useEffect(() => {\n        doFetch()\n    }, [doFetch])\n    console.log('я тут',response)\n    if (!response) {\n        return null\n    }\n\n    return  (\n      <div className='profile-page user'>\n        <div className='user__info'>\n          <div className='container'>\n            <img className='user__avatar' alt='user avatar' src={response.profile.image} />\n            <h4>{response.profile.userName}</h4>\n            <p>{response.profile.bio}</p>\n          </div>\n        </div>\n        <div className='container articles'>\n          <ul className='articles__toggle'>\n            <li className='articles__item'>\n              <NavLink \n                className='articles__link' \n                to={`/profiles/${response.profile.username}`}\n                exact\n              >\n                My posts\n              </NavLink>\n              <NavLink \n                className='articles__link' \n                to={`/profiles/${response.profile.username}/favorites`}\n              >\n                Favorite posts\n              </NavLink>\n            </li>\n          </ul>\n        </div>\n        <UserArticles \n          username={response.profile.username} \n          location={location} \n          isFavorites={isFavorites}\n          url={match.url}\n        />\n      </div>\n    )\n}\n\nexport default UserProfile","/Users/pavelgordeev/Documents/projects/react-hooks-course/medium-clone/src/pages/settings/settings.js",[],"/Users/pavelgordeev/Documents/projects/react-hooks-course/medium-clone/src/hooks/useFetch.js",[],"/Users/pavelgordeev/Documents/projects/react-hooks-course/medium-clone/src/hooks/useLocalStorage.js",[],"/Users/pavelgordeev/Documents/projects/react-hooks-course/medium-clone/src/components/ArticleForm/ArticleForm.js",["164","165","166","167","168","169","170","171"],"import React, {useState, useEffect} from 'react'\n\nimport BackendErrorMessages from '@components/BackendErrorMessages/BackendErrorMessages';\n\nconst ArticleForm = ({onSubmit, errors, initialValues}) => {\n    const [title, setTitle] = useState('')\n    const [body, setBody] = useState('')\n    const [description, setDescription] = useState('')\n    const [tagList, setTagList] = useState('')\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        const article = {\n          title,\n          body,\n          description,\n          tagList: tagList.split(' ')\n        }\n        onSubmit(article)\n    }\n\n    useEffect(() => {\n      if (!initialValues) {\n        return\n      }\n      setTitle(initialValues.title)\n      setDescription(initialValues.description)\n      setBody(initialValues.body)\n      setTagList(initialValues.tagList.join(' '))\n    }, [initialValues])\n    return (\n      <div className=''>\n        <div className=''>\n          <div className='article'>\n            {errors && <BackendErrorMessages backendErrors={errors} />}\n            <form className='article__form' onSubmit={handleSubmit}>\n              <fieldset className='article__info'>\n                <input \n                  type='text' \n                  className='article__text' \n                  placeholder='Article title' \n                  value={title}\n                  onChange={e => setTitle(e.target.value)}\n                />       \n                <input \n                  type='text' \n                  className='article__text' \n                  placeholder='What is this article about?' \n                  value={description}\n                  onChange={e => setDescription(e.target.value)}\n                />\n                <textarea \n                  className='article__textarea' \n                  rows='8' \n                  placeholder='Write your article'\n                  value={body}\n                  onChange={e => setBody(e.target.value)}\n                />\n                <input \n                  type='text' \n                  className='article__text' \n                  placeholder='Enter tags' \n                  value={tagList}\n                  onChange={e => setTagList(e.target.value)}\n                />\n              </fieldset>\n              <button type='submit' className='article__submit'>\n                Publish article\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    )\n}\n\nexport default ArticleForm","/Users/pavelgordeev/Documents/projects/react-hooks-course/medium-clone/src/components/BackendErrorMessages/BackendErrorMessages.js",["172","173"],"/Users/pavelgordeev/Documents/projects/react-hooks-course/medium-clone/src/components/ErrorMessage/ErrorMessage.js",[],"/Users/pavelgordeev/Documents/projects/react-hooks-course/medium-clone/src/components/Loading/Loading.js",[],"/Users/pavelgordeev/Documents/projects/react-hooks-course/medium-clone/src/components/TagList/TagList.js",["174","175"],"import React from 'react'\n\n\nconst TagList = ({tags}) => (\n  <ul className='article__tag-list'>\n    {tags.map((tag) => <li key={tag} className=\"article__tag-item\">{tag}</li>)}\n  </ul>\n    )\n\nexport default TagList","/Users/pavelgordeev/Documents/projects/react-hooks-course/medium-clone/src/components/FeedToggler/FeedToggler.js",["176"],"import React, {useContext} from 'react'\nimport { NavLink } from 'react-router-dom'\n\nimport {CurrentUserContext} from '@contexts/currentUser';\nimport './FeedToggler.css'\n\nconst FeedToggler = ({tagName = ''}) => {\n    const [currentUserState] = useContext(CurrentUserContext)\n    return (\n      <div className=\"feed-toggle\">\n        <ul className=\"feed-toggle__list\"> \n          {currentUserState.isLoggedIn && (\n          <li className=\"feed-toggle__item\">\n            <NavLink to='/feed' className=\"feed-toggle__link\">Your feed</NavLink>\n          </li>\n)}\n          <li className=\"feed-toggle__item\">\n            <NavLink to='/' className=\"feed-toggle__link\" exact>Global feed</NavLink>\n          </li>\n          {tagName && (\n            <li className=\"feed-toggle__item\">\n              <NavLink to={`/tags/${tagName}`} className=\"feed-toggle__link\">\n                #\n                {tagName}\n              </NavLink>\n            </li>\n                )}\n        </ul>\n      </div>\n    )\n}\n\nexport default FeedToggler","/Users/pavelgordeev/Documents/projects/react-hooks-course/medium-clone/src/components/Feed/Feed.js",["177","178"],"import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport TagList from '@components/TagList/TagList';\nimport AddToFavorite from '@components/AddToFavorite/AddToFavorite';\nimport './Feed.css'\n\nconst Feed = ({articles}) => (\n  <div className='article'>\n    {articles.map((article, index) => (\n      // eslint-disable-next-line react/no-array-index-key\n      <div className='article__preview' key={index}>\n        <div className='article__meta'>\n          <Link to={`/profiles/${article.author.username}`} className='article__link'>\n            <div className='article__avatar avatar'>\n              <img \n                src={article.author.image} \n                alt=\"author avatar\"\n                className='avatar__img'\n              />\n            </div>\n          </Link>\n          <div className=\"article__info\">\n            <Link \n              to={`/profiles/${article.author.username}`}\n              className=\"article__link\"\n            >\n              {article.author.username}\n            </Link>\n            <span className=\"article__data\">{article.createdAt}</span>\n          </div>\n          <div className=\"\">\n            <AddToFavorite \n              isFavorite={article.favorited}\n              favoritesCount={article.favoritesCount}\n              articleSlug={article.slug}\n            />\n          </div>\n        </div>\n        <Link to={`/articles/${article.slug}`} className=\"article__link\">\n          <h1>{article.title}</h1>\n          <p>{article.description}</p>\n          <span>Read more...</span>\n          <TagList tags={article.tagList} />\n        </Link>\n      </div>\n))}\n  </div>\n    )\n\nexport default Feed","/Users/pavelgordeev/Documents/projects/react-hooks-course/medium-clone/src/components/Pagination/Pagination.js",["179","180","181","182","183","184","185","186"],"import React from 'react'\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport {range, compactRange} from '~/utils';\n\nimport './Pagination.css'\n\nconst PaginationItem = ({page, currentPage, url}) => {\n    const liClasses = classNames({\n        '': true,\n        'active': currentPage === page,\n    })\n    return (\n      <li className={liClasses}>\n        <Link to={`${url}?page=${page}`} className=\"pagination__link\">\n          {page}\n        </Link>\n      </li>\n    )\n}\n\nconst Pagination = ({total, limit, url, currentPage}) => {\n    const pageCount = Math.ceil(total/limit)\n    const pages = range(1, pageCount)\n    const pagesActive = compactRange(pageCount, currentPage).sort()\n    console.log(pagesActive)\n    return (\n      <ul className=\"pagination\">\n        {pages.map(page => {\n                if (!pagesActive.includes(page)) {\n                    return false\n                }\n                return (\n                  <PaginationItem\n                    page={page}\n                    currentPage={currentPage}\n                    url={url}\n                    key={page}\n                  />\n                )\n            })}\n      </ul>\n    )\n}\n\nexport default Pagination","/Users/pavelgordeev/Documents/projects/react-hooks-course/medium-clone/src/components/PopularTags/PopularTags.js",["187"],"import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom';\n\nimport useFetch from '@hooks/useFetch';\n\nimport Loading from '@components/Loading/Loading';\nimport ErrorMessage from '@components/ErrorMessage/ErrorMessage';\n\nimport './PopularTags.css'\n\nconst PopularTags = () => {\n    const [{response, isLoading, error}, doFetch] = useFetch('/tags')\n\n    useEffect(() => {\n        doFetch()\n    }, [doFetch])\n\n    if (isLoading || !response) {\n        return <Loading />\n    }\n    console.log(response)\n    if (error) {\n        return <ErrorMessage />\n    }\n\n    return (\n      <div className='tags'>\n        <p className='tags__title'>Popular Tags</p>\n        <div className='tags__list'>\n          {response.tags.map((tag) => (\n            <Link \n              to={`/tag/${tag}`} \n              className='tags__link' \n              key={tag}\n            >\n              {tag}\n            </Link>\n        )\n        )}\n        </div>\n      </div>\n    )\n}\n\nexport default PopularTags","/Users/pavelgordeev/Documents/projects/react-hooks-course/medium-clone/src/components/AddToFavorite/AddToFavorite.js",["188","189","190","191"],"import React from \"react\"\n\nimport classNames from \"classnames\";\nimport useFetch from \"@hooks/useFetch\";\n\nconst AddToFavorite = ({isFavorite, favoritesCount, articleSlug}) => {\n    const apiUrl = `/articles/${articleSlug}/favorite`;\n    const [{response}, doFetch] = useFetch(apiUrl);\n    const favoritesCountWithResponce = response \n        ? response.article.favoritesCount\n        : favoritesCount\n    const isFavoritedWithResponce = response \n        ? response.article.favorited \n        : isFavorite\n    \n    const buttonClasses = classNames({\n        btn: true,\n        \"btn-sm\": true,\n        \"btn-primary\": isFavoritedWithResponce,\n        \"btn-outline-primary\": !isFavoritedWithResponce\n    })\n    \n    const handleLike = (event) => {\n        console.log(\"click\")\n        event.preventDefault()\n        doFetch({\n            method: isFavoritedWithResponce ? \"delete\" : \"post\"\n        })\n    }\n    \n    return (\n      <button type='submit' className={buttonClasses} onClick={handleLike}>\n        <ion-icon name=\"heart-outline\" />\n        <span>\n          {favoritesCountWithResponce}\n        </span>\n      </button>\n    )\n}\n\nexport default AddToFavorite","/Users/pavelgordeev/Documents/projects/react-hooks-course/medium-clone/src/pages/userProfile/components/UserArticles/UserArticles.js",["192","193","194","195","196"],"import React, { Fragment, useEffect } from 'react'\nimport {stringify} from 'query-string';\n\nimport useFetch from '@hooks/useFetch';\n\nimport Loading from '@components/Loading/Loading';\nimport ErrorMessage from '@components/ErrorMessage/ErrorMessage';\nimport Feed from '@components/Feed/Feed';\nimport Pagination from '@components/Pagination/Pagination';\nimport {getPaginator, limit} from '~/utils';\n\nconst getApiUrl = ({username, offset, isFavorites}) => {\n    const params = isFavorites \n        ? {limit, offset, favorited: username} \n        : {limit, offset, author: username}\n\n    return `/articles?${stringify(params)}`\n}\nconst UserArticles = ({username, location, isFavorites, url}) => {\n    const {offset, currentPage} = getPaginator(location.search)\n    const apiUrl = getApiUrl({username, offset, isFavorites})\n    const [{response, isLoading, error}, doFetch] = useFetch(apiUrl)\n\n    useEffect(() => {\n        doFetch()\n    }, [doFetch, isFavorites])\n    return (\n      <div>\n        {isLoading && <Loading />}\n        {error && <ErrorMessage />}\n        {!isLoading && response && (\n        <>\n          <Feed articles={response.articles} />\n          <Pagination \n            total={response.articlesCount} \n            limit={limit} \n            url={url} \n            currentPage={currentPage}\n          />\n        </>\n            )}\n      </div>\n    )\n}\n\nexport default UserArticles","/Users/pavelgordeev/Documents/projects/react-hooks-course/medium-clone/src/utils.js",[],{"ruleId":"197","replacedBy":"198"},{"ruleId":"199","replacedBy":"200"},{"ruleId":"201","replacedBy":"202"},{"ruleId":"203","replacedBy":"204"},{"ruleId":"205","replacedBy":"206"},{"ruleId":"207","severity":1,"message":"208","line":40,"column":39,"nodeType":"209","endLine":40,"endColumn":47},{"ruleId":"210","severity":1,"message":"211","line":10,"column":5,"nodeType":"212","messageId":"213","endLine":10,"endColumn":16},{"ruleId":"207","severity":1,"message":"214","line":16,"column":22,"nodeType":"209","endLine":16,"endColumn":30},{"ruleId":"207","severity":1,"message":"215","line":16,"column":32,"nodeType":"209","endLine":16,"endColumn":37},{"ruleId":"207","severity":1,"message":"216","line":17,"column":57,"nodeType":"217","endLine":17,"endColumn":63},{"ruleId":"207","severity":1,"message":"218","line":24,"column":12,"nodeType":"209","endLine":24,"endColumn":15},{"ruleId":"207","severity":1,"message":"214","line":15,"column":20,"nodeType":"209","endLine":15,"endColumn":28},{"ruleId":"207","severity":1,"message":"215","line":15,"column":30,"nodeType":"209","endLine":15,"endColumn":35},{"ruleId":"207","severity":1,"message":"216","line":16,"column":57,"nodeType":"217","endLine":16,"endColumn":63},{"ruleId":"207","severity":1,"message":"218","line":23,"column":12,"nodeType":"209","endLine":23,"endColumn":15},{"ruleId":"207","severity":1,"message":"215","line":11,"column":20,"nodeType":"209","endLine":11,"endColumn":25},{"ruleId":"207","severity":1,"message":"219","line":12,"column":12,"nodeType":"209","endLine":12,"endColumn":16},{"ruleId":"207","severity":1,"message":"220","line":12,"column":26,"nodeType":"217","endLine":12,"endColumn":32},{"ruleId":"207","severity":1,"message":"215","line":13,"column":26,"nodeType":"209","endLine":13,"endColumn":31},{"ruleId":"207","severity":1,"message":"221","line":14,"column":27,"nodeType":"217","endLine":14,"endColumn":31},{"ruleId":"207","severity":1,"message":"214","line":15,"column":19,"nodeType":"209","endLine":15,"endColumn":27},{"ruleId":"207","severity":1,"message":"215","line":15,"column":29,"nodeType":"209","endLine":15,"endColumn":34},{"ruleId":"207","severity":1,"message":"220","line":16,"column":27,"nodeType":"217","endLine":16,"endColumn":33},{"ruleId":"207","severity":1,"message":"219","line":16,"column":34,"nodeType":"217","endLine":16,"endColumn":38},{"ruleId":"207","severity":1,"message":"216","line":17,"column":57,"nodeType":"217","endLine":17,"endColumn":63},{"ruleId":"207","severity":1,"message":"218","line":25,"column":12,"nodeType":"209","endLine":25,"endColumn":15},{"ruleId":"207","severity":1,"message":"215","line":8,"column":23,"nodeType":"209","endLine":8,"endColumn":28},{"ruleId":"207","severity":1,"message":"214","line":8,"column":30,"nodeType":"209","endLine":8,"endColumn":38},{"ruleId":"207","severity":1,"message":"219","line":10,"column":12,"nodeType":"209","endLine":10,"endColumn":16},{"ruleId":"207","severity":1,"message":"220","line":10,"column":26,"nodeType":"217","endLine":10,"endColumn":32},{"ruleId":"207","severity":1,"message":"222","line":11,"column":34,"nodeType":"217","endLine":11,"endColumn":42},{"ruleId":"207","severity":1,"message":"223","line":11,"column":43,"nodeType":"217","endLine":11,"endColumn":51},{"ruleId":"210","severity":1,"message":"211","line":18,"column":5,"nodeType":"212","messageId":"213","endLine":18,"endColumn":16},{"ruleId":"207","severity":1,"message":"218","line":55,"column":22,"nodeType":"217","endLine":55,"endColumn":25},{"ruleId":"207","severity":1,"message":"224","line":5,"column":23,"nodeType":"209","endLine":5,"endColumn":31},{"ruleId":"207","severity":1,"message":"225","line":5,"column":33,"nodeType":"209","endLine":5,"endColumn":39},{"ruleId":"207","severity":1,"message":"226","line":5,"column":41,"nodeType":"209","endLine":5,"endColumn":54},{"ruleId":"207","severity":1,"message":"227","line":26,"column":30,"nodeType":"217","endLine":26,"endColumn":35},{"ruleId":"207","severity":1,"message":"228","line":27,"column":36,"nodeType":"217","endLine":27,"endColumn":47},{"ruleId":"207","severity":1,"message":"229","line":28,"column":29,"nodeType":"217","endLine":28,"endColumn":33},{"ruleId":"207","severity":1,"message":"230","line":29,"column":32,"nodeType":"217","endLine":29,"endColumn":39},{"ruleId":"207","severity":1,"message":"231","line":29,"column":40,"nodeType":"217","endLine":29,"endColumn":44},{"ruleId":"207","severity":1,"message":"232","line":5,"column":32,"nodeType":"209","endLine":5,"endColumn":45},{"ruleId":"207","severity":1,"message":"233","line":10,"column":50,"nodeType":"217","endLine":10,"endColumn":56},{"ruleId":"207","severity":1,"message":"234","line":4,"column":19,"nodeType":"209","endLine":4,"endColumn":23},{"ruleId":"207","severity":1,"message":"235","line":6,"column":11,"nodeType":"217","endLine":6,"endColumn":14},{"ruleId":"207","severity":1,"message":"236","line":7,"column":23,"nodeType":"209","endLine":7,"endColumn":35},{"ruleId":"207","severity":1,"message":"237","line":8,"column":16,"nodeType":"209","endLine":8,"endColumn":24},{"ruleId":"207","severity":1,"message":"238","line":10,"column":15,"nodeType":"217","endLine":10,"endColumn":18},{"ruleId":"207","severity":1,"message":"239","line":9,"column":26,"nodeType":"209","endLine":9,"endColumn":30},{"ruleId":"207","severity":1,"message":"240","line":9,"column":32,"nodeType":"209","endLine":9,"endColumn":43},{"ruleId":"207","severity":1,"message":"241","line":9,"column":45,"nodeType":"209","endLine":9,"endColumn":48},{"ruleId":"207","severity":1,"message":"242","line":23,"column":22,"nodeType":"209","endLine":23,"endColumn":27},{"ruleId":"207","severity":1,"message":"243","line":23,"column":29,"nodeType":"209","endLine":23,"endColumn":34},{"ruleId":"207","severity":1,"message":"241","line":23,"column":36,"nodeType":"209","endLine":23,"endColumn":39},{"ruleId":"207","severity":1,"message":"240","line":23,"column":41,"nodeType":"209","endLine":23,"endColumn":52},{"ruleId":"210","severity":1,"message":"211","line":27,"column":5,"nodeType":"212","messageId":"213","endLine":27,"endColumn":16},{"ruleId":"210","severity":1,"message":"211","line":21,"column":5,"nodeType":"212","messageId":"213","endLine":21,"endColumn":16},{"ruleId":"207","severity":1,"message":"244","line":6,"column":25,"nodeType":"209","endLine":6,"endColumn":35},{"ruleId":"207","severity":1,"message":"245","line":6,"column":37,"nodeType":"209","endLine":6,"endColumn":51},{"ruleId":"207","severity":1,"message":"246","line":6,"column":53,"nodeType":"209","endLine":6,"endColumn":64},{"ruleId":"210","severity":1,"message":"211","line":24,"column":9,"nodeType":"212","messageId":"213","endLine":24,"endColumn":20},{"ruleId":"207","severity":1,"message":"247","line":19,"column":24,"nodeType":"209","endLine":19,"endColumn":32},{"ruleId":"207","severity":1,"message":"214","line":19,"column":34,"nodeType":"209","endLine":19,"endColumn":42},{"ruleId":"207","severity":1,"message":"248","line":19,"column":44,"nodeType":"209","endLine":19,"endColumn":55},{"ruleId":"207","severity":1,"message":"241","line":19,"column":57,"nodeType":"209","endLine":19,"endColumn":60},{"ruleId":"207","severity":1,"message":"216","line":20,"column":57,"nodeType":"217","endLine":20,"endColumn":63},"lines-around-directive",["249"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"react/prop-types","'children' is missing in props validation","Property","no-console","Unexpected console statement.","MemberExpression","unexpected","'location' is missing in props validation","'match' is missing in props validation","'location.search' is missing in props validation","Identifier","'match.url' is missing in props validation","'match.params.slug' is missing in props validation","'match.params' is missing in props validation","'match.path' is missing in props validation","'location.pathname' is missing in props validation","'location.pathname.includes' is missing in props validation","'onSubmit' is missing in props validation","'errors' is missing in props validation","'initialValues' is missing in props validation","'initialValues.title' is missing in props validation","'initialValues.description' is missing in props validation","'initialValues.body' is missing in props validation","'initialValues.tagList' is missing in props validation","'initialValues.tagList.join' is missing in props validation","'backendErrors' is missing in props validation","'backendErrors[].length' is missing in props validation","'tags' is missing in props validation","'tags.map' is missing in props validation","'tagName' is missing in props validation","'articles' is missing in props validation","'articles.map' is missing in props validation","'page' is missing in props validation","'currentPage' is missing in props validation","'url' is missing in props validation","'total' is missing in props validation","'limit' is missing in props validation","'isFavorite' is missing in props validation","'favoritesCount' is missing in props validation","'articleSlug' is missing in props validation","'username' is missing in props validation","'isFavorites' is missing in props validation","padding-line-between-statements"]